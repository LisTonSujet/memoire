INFO: Starting training:
        Epochs:          5
        Batch size:      16
        Learning rate:   0.0001
        Training size:   846
        Validation size: 94
        Checkpoints:     True
        Device:          cpu
        Images scaling:  0.5
        Mixed Precision: False
Epoch 1/5:   0% 0/846 [00:56<?, ?img/s]
Traceback (most recent call last):
  File "/content/drive/MyDrive/Colab_Notebooks/STAGE/COCO_dataset/detect/train.py", line 212, in <module>
    train_model(
  File "/content/drive/MyDrive/Colab_Notebooks/STAGE/COCO_dataset/detect/train.py", line 106, in train_model
    loss = criterion(masks_pred, true_masks)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/loss.py", line 720, in forward
    return F.binary_cross_entropy_with_logits(input, target,
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/functional.py", line 3163, in binary_cross_entropy_with_logits
    raise ValueError("Target size ({}) must be the same as input size ({})".format(target.size(), input.size()))
ValueError: Target size (torch.Size([16, 256, 256])) must be the same as input size (torch.Size([16, 2, 256, 256]))